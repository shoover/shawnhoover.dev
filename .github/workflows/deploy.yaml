name: Trunk-based Deployment
on:
  push:

env:
  # Override the time zone to the one that post timestamps were
  # written in. Orgmode assumes timestamps are in the default system
  # zone.
  TZ: EST+5EDT
    
jobs:
  deploy-stage-www:
    name: Deploy stage-www

    runs-on: ubuntu-latest
    permissions: # Needed to interact with GitHub's OIDC Token endpoint.
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::668334381016:role/shawnhoover-dev-ci-role
        aws-region: us-east-1

    # Emacs caching strategy:
    # - Emacs takes forever to build. Definitely don't do that.
    # - setup-emacs installs cleanly from the nix cache in about a minute. Nice,
    #   but too slow to use for every build.
    # - Use setup-emacs to install once (per version) and save to the GitHub
    #   cache. Cache the emacs package and all dependencies.
    # - On a cache hit, restore and link to /nix/store so dynamic linking works.
    # - Ideally, setup-emacs itself would save to the Action tool cache. That would require
    #   rewriting the Action in JS, I think.    
    - name: Cache emacs - Get
      id: cache-emacs
      uses: actions/cache@v3
      with:
        path: /home/runner/.local/nix/store-emacs-29-1
        key: ${{ runner.os }}-emacs-29-1
   
    - name: Cache emacs - Hit
      if: steps.cache-emacs.outputs.cache-hit == 'true'
      run: |
        sudo mkdir -p /nix/store
        sudo ln -s $HOME/.local/nix/store-emacs-29-1/* /nix/store/
        emacs_store=$(find /nix/store -name "*-emacs-29-1")
        test -x $emacs_store/bin/emacs
        echo "$emacs_store/bin" >> $GITHUB_PATH

    - name: Cache emacs - Miss - Install
      uses: purcell/setup-emacs@master
      if: steps.cache-emacs.outputs.cache-hit != 'true'
      with:
        version: 29.1

    - name: Cache emacs - Miss - Put
      if: steps.cache-emacs.outputs.cache-hit != 'true'
      run: |
        ls -l `which emacs`
        emacs --version
        mkdir -p $HOME/.local/nix/store-emacs-29-1
        nix-store --query --requisites $(which emacs) | xargs -I {} rsync -av {} $HOME/.local/nix/store-emacs-29-1

    - name: Build
      run: |
        set -x
        file --dereference `which emacs`
        emacs --version
        emacs --batch --eval "(package-install 'htmlize)"
        make build

    - name: Deploy to AWS - stage
      run: |
        source .env_deploy_stage
        make deploy

    - name: Upload sitemap
      uses: actions/upload-artifact@v3
      with:
        name: sitemap
        path: notes/index.org

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build

  deploy-www:
    name: Deploy www
    if: github.ref == 'refs/heads/main'
    needs: [deploy-stage-www]

    runs-on: ubuntu-latest
    permissions: # Needed to interact with GitHub's OIDC Token endpoint.
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download build from the staging job
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::668334381016:role/shawnhoover-dev-ci-role
        aws-region: us-east-1

    - name: Deploy to AWS - main
      run: |
        source .env_deploy_main
        make deploy
        
